{"title":"制作一个跑酷系统","uid":"0b6ba2c8e01bb1370597130d76cb280b","slug":"制作一个跑酷系统","date":"2022-06-26T11:44:10.000Z","updated":"2022-06-28T08:47:34.157Z","comments":true,"path":"api/articles/制作一个跑酷系统.json","keywords":null,"cover":"/img/background/cover.jpg","content":"<h1 id=\"1，人物控制和相机控制\"><a href=\"#1，人物控制和相机控制\" class=\"headerlink\" title=\"1，人物控制和相机控制\"></a>1，人物控制和相机控制</h1><h2 id=\"1：控制相机与角色的偏移\"><a href=\"#1：控制相机与角色的偏移\" class=\"headerlink\" title=\"1：控制相机与角色的偏移\"></a>1：控制相机与角色的偏移</h2><pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> followTarget<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<h2 id=\"2：让相机以角色为中心点，以一个圆为周期转动。\"><a href=\"#2：让相机以角色为中心点，以一个圆为周期转动。\" class=\"headerlink\" title=\"2：让相机以角色为中心点，以一个圆为周期转动。\"></a>2：让相机以角色为中心点，以一个圆为周期转动。</h2><pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">\ntransform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Euler</span><span class=\"token punctuation\">(</span>x轴转向<span class=\"token punctuation\">,</span> y轴转向<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>距离角色距离<span class=\"token punctuation\">)</span> \n<span class=\"token operator\">+</span> followTarget<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> 中心点的偏移量<span class=\"token punctuation\">;</span>\n\ntransform<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">Euler</span><span class=\"token punctuation\">(</span>x轴转向<span class=\"token punctuation\">,</span> y轴转向<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"3：移动和根据相机位置调整方位\"><a href=\"#3：移动和根据相机位置调整方位\" class=\"headerlink\" title=\"3：移动和根据相机位置调整方位\"></a>3：移动和根据相机位置调整方位</h2><p><strong>知识点 : 四元数 * 向量 &#x3D; 旋转后的向量 （注意左右乘）</strong></p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//监控按键 0渐变为1或者-1</span>\n<span class=\"token class-name\"><span class=\"token keyword\">float</span></span> h <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Horizontal\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">float</span></span> v <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">.</span><span class=\"token function\">GetAxis</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Vertical\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//监控按键的量，有值说明有按键</span>\n<span class=\"token class-name\"><span class=\"token keyword\">float</span></span> moveAmount <span class=\"token operator\">=</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Clamp01</span><span class=\"token punctuation\">(</span>Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Abs</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//构建移动向量，注意椭圆映射</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> moveInput <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span>\n            h <span class=\"token operator\">*</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Sqrt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Pow</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n            <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> \n            v <span class=\"token operator\">*</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Sqrt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">-</span> Mathf<span class=\"token punctuation\">.</span><span class=\"token function\">Pow</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">2.0f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//获得相机的旋转量 并乘上移动向量，获得旋转后向量</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> moveDir <span class=\"token operator\">=</span> cameraController<span class=\"token punctuation\">.</span>PlanarRotation <span class=\"token operator\">*</span> moveInput<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//若有按键</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>moveAmount <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> \n        <span class=\"token punctuation\">&#123;</span>   <span class=\"token comment\">//移动</span>\n            transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+=</span> moveDir <span class=\"token operator\">*</span> moveSpeed <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//保存转动方向</span>\n\t\t\ttargetRotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">LookRotation</span><span class=\"token punctuation\">(</span>moveDir<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         \n        <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//转动角色朝向</span>\ntransform<span class=\"token punctuation\">.</span>rotation<span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">RotateTowards</span><span class=\"token punctuation\">(</span>\ntransform<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">,</span> targetRotation<span class=\"token punctuation\">,</span> rotationSpeed <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\n<span class=\"token comment\">//设置混合树 </span>\n<span class=\"token comment\">//dampTime: 用 dampTime 长的时间，将 我们设置的叫做  name 的 float类型 的值由 原本的值 改变到给定的 value 值。</span>\n<span class=\"token comment\">//deltaTime：两次执行该方法的时间间隔。（因为这个方法会每 deltaTime 执行一次，直到 name = value）</span>\nanimator<span class=\"token punctuation\">.</span><span class=\"token function\">SetFloat</span><span class=\"token punctuation\">(</span>Animator<span class=\"token punctuation\">.</span><span class=\"token function\">StringToHash</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"NormalAmount\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> moveAmount<span class=\"token punctuation\">,</span><span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span>Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"4：转用CharacterController来控制角色移动\"><a href=\"#4：转用CharacterController来控制角色移动\" class=\"headerlink\" title=\"4：转用CharacterController来控制角色移动\"></a>4：转用CharacterController来控制角色移动</h2><p>CC自带有胶囊碰撞体。一般来说这类东西的组合是Rb+Collider或者单独一个CC。CC适用于第一人称或者第三人称人物角色控制，但是需要自己写一些东西比如重力。</p>\n<p>CharacterController </p>\n<pre><code>1.Character Controller不是基于物理，没有重力，没有阻力，没有加速度，所有移动都是精确的\n\n2.Character Controller可以跨过物体，也就是上台阶，不过会一顿一顿，同是下楼梯需要自己写重力\n\n3.Character Controller 不会对 Rigidbody产生反应\n\n4.Character Controller自带地面监测，不过好像有BUG，一般还是自己写\n\n5.Character Controller的移动通过向量控制，自带碰撞监测\n</code></pre>\n<p>Rigidbody</p>\n<pre><code>1.Rigidbody是基于物理的，所以移动会比较平滑自然，但是因为有各种力，所以很难保证精确度\n\n2.Rigidbody会对Rigidbody产生反应\n\n3.Rigidbody的移动通过力或者速度控制，不加碰撞体就不会产生碰撞\n</code></pre>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">\n<span class=\"token comment\">//transform.position += moveDir * moveSpeed * Time.deltaTime;</span>\n<span class=\"token comment\">//改成</span>\ncharacterController<span class=\"token punctuation\">.</span><span class=\"token function\">Move</span><span class=\"token punctuation\">(</span>moveDir <span class=\"token operator\">*</span> moveSpeed <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"5：使用Physics物理检测\"><a href=\"#5：使用Physics物理检测\" class=\"headerlink\" title=\"5：使用Physics物理检测\"></a>5：使用Physics物理检测</h2><p>检测是否踩在地板上，并且添加重力影响。</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> groundCheckRadius<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">Vector3</span> groundCheckOffset<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">LayerMask</span> groundLayer<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> isGround<span class=\"token punctuation\">;</span>\n<span class=\"token function\">GroundCheck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">//如果踩在地板上</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isGround<span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#123;</span>\n   ySpeed <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">0.5f</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token comment\">//添加一个向下的量，用以模拟重力掉落。</span>\n   ySpeed <span class=\"token operator\">+=</span> Physics<span class=\"token punctuation\">.</span>gravity<span class=\"token punctuation\">.</span>y <span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> velocity <span class=\"token operator\">=</span> moveDir <span class=\"token operator\">*</span> moveSpeed<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//添加向下的量</span>\nvelocity<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> ySpeed<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//</span>\ncharacterController<span class=\"token punctuation\">.</span><span class=\"token function\">Move</span><span class=\"token punctuation\">(</span>velocity <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">GroundCheck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n<span class=\"token comment\">//射线检测，创建一个球体用来检测</span>\n    isGround <span class=\"token operator\">=</span> Physics<span class=\"token punctuation\">.</span><span class=\"token function\">CheckSphere</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">.</span><span class=\"token function\">TransformPoint</span><span class=\"token punctuation\">(</span>groundCheckOffset<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">,</span>\n    groundCheckRadius<span class=\"token punctuation\">,</span> \n    groundLayer<span class=\"token punctuation\">.</span><span class=\"token keyword\">value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h1 id=\"2-跑酷系统\"><a href=\"#2-跑酷系统\" class=\"headerlink\" title=\"2.跑酷系统\"></a>2.跑酷系统</h1><h2 id=\"1-墙面扫描\"><a href=\"#1-墙面扫描\" class=\"headerlink\" title=\"1.墙面扫描\"></a>1.墙面扫描</h2><p>设定一个墙面扫描的脚本，用处是扫描人物面前的障碍物。</p>\n<p>对于不同高度的障碍物，需要使用射线扫描面前的障碍物高度，然后根据高度选择播放的动画。</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//前向射线的偏移值</span>\n<span class=\"token punctuation\">[</span>SerializeField<span class=\"token punctuation\">]</span> <span class=\"token class-name\">Vector3</span> forwardRayOffset<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//前向射线长度</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> forwardRayLength <span class=\"token operator\">=</span> <span class=\"token number\">0.8f</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//扫描高度值的射线最大值</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> heightRayLength <span class=\"token operator\">=</span> <span class=\"token number\">5f</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//用于标识障碍物的层</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">LayerMask</span> obstacleLayer<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">ObstacleHitData</span> <span class=\"token function\">ObstacleCheck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> hitData <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ObstacleHitData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> forwardOrigin <span class=\"token operator\">=</span> transform<span class=\"token punctuation\">.</span>position <span class=\"token operator\">+</span> forwardRayOffset<span class=\"token punctuation\">;</span>\n        \n    <span class=\"token comment\">//前向射线</span>\n    hitData<span class=\"token punctuation\">.</span>forwardHitFound <span class=\"token operator\">=</span> Physics<span class=\"token punctuation\">.</span><span class=\"token function\">Raycast</span><span class=\"token punctuation\">(</span>forwardOrigin<span class=\"token punctuation\">,</span> \n    transform<span class=\"token punctuation\">.</span>forward<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">out</span> hitData<span class=\"token punctuation\">.</span>forwardHit<span class=\"token punctuation\">,</span> forwardRayLength<span class=\"token punctuation\">,</span>obstacleLayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">DrawRay</span><span class=\"token punctuation\">(</span>forwardOrigin<span class=\"token punctuation\">,</span> transform<span class=\"token punctuation\">.</span>forward <span class=\"token operator\">*</span> forwardRayLength<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>hitData<span class=\"token punctuation\">.</span>forwardHitFound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">?</span>Color<span class=\"token punctuation\">.</span>red<span class=\"token punctuation\">:</span>Color<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>hitData<span class=\"token punctuation\">.</span>forwardHitFound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//碰撞点上面往下射,刚好碰到面前物体的边缘,算出障碍物的总高度,需要减去人物最低点才能得到实际高度。</span>\n        <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> heightOrigin <span class=\"token operator\">=</span> hitData<span class=\"token punctuation\">.</span>forwardHit<span class=\"token punctuation\">.</span>point <span class=\"token operator\">+</span> Vector3<span class=\"token punctuation\">.</span>up \n        <span class=\"token operator\">*</span> heightRayLength<span class=\"token punctuation\">;</span>\n\n        hitData<span class=\"token punctuation\">.</span>heightHitFound <span class=\"token operator\">=</span> Physics<span class=\"token punctuation\">.</span><span class=\"token function\">Raycast</span><span class=\"token punctuation\">(</span>heightOrigin<span class=\"token punctuation\">,</span>Vector3<span class=\"token punctuation\">.</span>down<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">out</span> hitData<span class=\"token punctuation\">.</span>heightHit<span class=\"token punctuation\">,</span>heightRayLength<span class=\"token punctuation\">,</span>obstacleLayer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">DrawRay</span><span class=\"token punctuation\">(</span>heightOrigin<span class=\"token punctuation\">,</span>Vector3<span class=\"token punctuation\">.</span>down <span class=\"token operator\">*</span> heightRayLength<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>hitData<span class=\"token punctuation\">.</span>forwardHitFound<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">?</span> Color<span class=\"token punctuation\">.</span>red <span class=\"token punctuation\">:</span> Color<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span>hitData<span class=\"token punctuation\">.</span>heightHit<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> hitData<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">ObstacleHitData</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//前向射线是否有碰撞</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> forwardHitFound<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//高度射线是否有碰撞</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> heightHitFound<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//前向射线</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">RaycastHit</span> forwardHit<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//高度射线</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">RaycastHit</span> heightHit<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h2 id=\"2-播放动画\"><a href=\"#2-播放动画\" class=\"headerlink\" title=\"2.播放动画\"></a>2.播放动画</h2><p>首先封装一个行为类<strong>ParkourAction</strong>，继承自ScriptObject，用于存储动画信息和触发动画需要的条件。</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span>  <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> animName<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//可播放动画的最低高度</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> minHeight<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//可播放动画的最高高度</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">private</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> maxHeight<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//是否要角色转向障碍物</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> rotateToObstacle<span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Header</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"使用Target Matching\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">bool</span></span> enabledTargetMatching <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\">AvatarTarget</span> matchBodyPart<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> matchStartTime<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span> <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> matchTargetTime<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//存储四元数,里面是射线碰撞到的障碍物的法线方向取反,即角色朝向障碍物面的四元数。</span>\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Quaternion</span> TargetRotation <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">Vector3</span> MatchPos <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">set</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token comment\">//检测条件是否符合播放动画的要求</span>\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> <span class=\"token function\">CheckIfPossible</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ObstacleHitData</span> hitData<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Transform</span> player<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//减去人物的高度得出障碍物的高度</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> height <span class=\"token operator\">=</span> hitData<span class=\"token punctuation\">.</span>heightHit<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">.</span>y <span class=\"token operator\">-</span> player<span class=\"token punctuation\">.</span>position<span class=\"token punctuation\">.</span> y<span class=\"token punctuation\">;</span>\n    Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token interpolation-string\"><span class=\"token string\">$\"面前的障碍物高度为:</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span><span class=\"token expression language-csharp\">height</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>height <span class=\"token operator\">&lt;=</span> minHeight <span class=\"token operator\">||</span> height <span class=\"token operator\">></span> maxHeight<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>rotateToObstacle<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        \n        TargetRotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">LookRotation</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>hitData<span class=\"token punctuation\">.</span>forwardHit<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n       \n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>enabledTargetMatching<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        MatchPos <span class=\"token operator\">=</span> hitData<span class=\"token punctuation\">.</span>heightHit<span class=\"token punctuation\">.</span>point<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">string</span></span> AnimName <span class=\"token operator\">=></span> animName<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> RotateToObstacle <span class=\"token operator\">=></span> rotateToObstacle<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">bool</span></span> EnabledTargetMatching <span class=\"token operator\">=></span> enabledTargetMatching<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">AvatarTarget</span> MatchBodyPart<span class=\"token operator\">=></span> matchBodyPart<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">float</span></span> MatchStartTime <span class=\"token operator\">=></span> matchStartTime<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">float</span></span> MatchTargetTime <span class=\"token operator\">=></span> matchTargetTime<span class=\"token punctuation\">;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>对于跨越或者攀爬这种会实际产生模型位移的动画，需要注意Animator的Apply Root Motion和动画Import Setting里Animation的Bake Into Pose，此处需要将Animator组件的Apply Root Motion勾选上。<br>使用协程来执行跨越障碍物的动画，</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token return-type class-name\">IEnumerator</span> <span class=\"token function\">DoParkoutAction</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ParkourAction</span> action<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//是否在播放动画</span>\n    inAction <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//角色控制器是否可控</span>\n    playerController<span class=\"token punctuation\">.</span><span class=\"token function\">SetControl</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">CrossFade</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>AnimName<span class=\"token punctuation\">,</span> <span class=\"token number\">0.1f</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//animator.Play(\"StepUp\");</span>\n    <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span> \n\n    \n    <span class=\"token comment\">//此函数在过渡期可用,获得下一个动画状态</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> animState <span class=\"token operator\">=</span> animator<span class=\"token punctuation\">.</span><span class=\"token function\">GetNextAnimatorStateInfo</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>animState<span class=\"token punctuation\">.</span><span class=\"token function\">IsName</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>AnimName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        Debug<span class=\"token punctuation\">.</span><span class=\"token function\">Log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The parkour animation is wrong\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n         \n\n    <span class=\"token class-name\"><span class=\"token keyword\">float</span></span> timer <span class=\"token operator\">=</span> <span class=\"token number\">0f</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//动画播放中</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>timer <span class=\"token operator\">&lt;=</span> animState<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        timer <span class=\"token operator\">+=</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>RotateToObstacle<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">//转向障碍物</span>\n            transform<span class=\"token punctuation\">.</span>rotation <span class=\"token operator\">=</span> Quaternion<span class=\"token punctuation\">.</span><span class=\"token function\">RotateTowards</span><span class=\"token punctuation\">(</span>\n            transform<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">,</span>\n            action<span class=\"token punctuation\">.</span>TargetRotation<span class=\"token punctuation\">,</span>\n            playerController<span class=\"token punctuation\">.</span>RotationSpeed <span class=\"token operator\">*</span> Time<span class=\"token punctuation\">.</span>deltaTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token comment\">//目标匹配,后面再讲</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>EnabledTargetMatching<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">MatchTarget</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//解除锁定</span>\n    inAction <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    playerController<span class=\"token punctuation\">.</span><span class=\"token function\">SetControl</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n\n<h2 id=\"3-优化动画\"><a href=\"#3-优化动画\" class=\"headerlink\" title=\"3.优化动画\"></a>3.优化动画</h2><p>出现的问题：</p>\n<ol>\n<li><p>动画在播放结束后，脚部会出现障碍物穿模或者高过障碍物的情况。</p>\n</li>\n<li><p>有攀墙动作的动画，手部无法真正抓住边缘。</p>\n</li>\n<li><p>攀爬结束后按前进会导致人物平移一段时间。</p>\n</li>\n<li><p>攀爬过程中整个人穿模。</p>\n</li>\n</ol>\n<h3 id=\"Target-Matching-目标匹配\"><a href=\"#Target-Matching-目标匹配\" class=\"headerlink\" title=\"Target Matching 目标匹配\"></a>Target Matching 目标匹配</h3><p>Unity手册的描述：通常在游戏中可能出现以下情况：角色必须以某种方式移动，使得手或脚在某个时间落在某个地方。例如，角色可能需要跳过踏脚石或跳跃并抓住顶梁。这种情况可以用Target Maching。(似乎只能用在AnimatorController里)</p>\n<p>我们的动画里有跃起，然后踏上障碍体的动作。首先要在AnimationClip里找到动画标准化时间的两个点，1个是角色离地的时间点，1个是踏上障碍体,结束落地的时间点。</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">MatchTarget</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ParkourAction</span> action<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//是否要使用了目标匹配</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>animator<span class=\"token punctuation\">.</span>isMatchingTarget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//参数解释：1.需要匹配的位置(一般为障碍物的高度值y,这里为高度射线的碰撞点位置取y值)</span>\n    <span class=\"token comment\">//2.角色转向的四元数。 3.系统枚举值:要匹配的肢体,人物四肢的其中1个。 4.~。 5.开始匹配的时间点。 6.结束匹配的时间点</span>\n    animator<span class=\"token punctuation\">.</span><span class=\"token function\">MatchTarget</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span>MatchPos<span class=\"token punctuation\">,</span>transform<span class=\"token punctuation\">.</span>rotation<span class=\"token punctuation\">,</span>\n        action<span class=\"token punctuation\">.</span>MatchBodyPart<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">MatchTargetWeightMask</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Vector3</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        action<span class=\"token punctuation\">.</span>MatchStartTime<span class=\"token punctuation\">,</span>\n        action<span class=\"token punctuation\">.</span>MatchTargetTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>第1点，这时候可以调整,调为feet。<br><img src=\"/img/article/PARKOUR_SYSTEM/0.png\" alt=\"image\"></p>\n<p>使用 Feet__ 时，对于所有帧，Root Transform Position Y 将与位置最低的脚 Y 匹配。因此，混合点始终保持在脚周围，从而防止在混合或过渡时发生浮动问题。</p>\n<p>脚超模的现象可以按第2点调。</p>\n<p>第2点，需要调整MatchTarget第4个参数，Unity手册里写的是：包含匹配位置和旋转的权重的结构，使用此结构可为 Animator.MatchTarget 指定位置和旋转权重遮罩。</p>\n<p>有一个Vector3类型的参数positionXYZWeight:位置 XYZ 权重,值在0~1之间。</p>\n<p>一个float类型的参数rotationWeight:\t旋转权重</p>\n<p>这里把positionXYZWeight的z值设为最高值1,这样匹配的权重会偏向障碍物平面的最边缘，可以把这个权重值封装在ScriptObject行为类里。<br>同理把y值设为1,说明在匹配y值方面,会把权重偏向最接近障碍物平面上,这样就不容易出现脚穿模在地下的情况。</p>\n<p>第3点，这里有一点上述的代码里没讲，因为攀爬动作没有从蹲下到站立的动画，所以攀爬结束后混合了一段蹲到站立的动画。而这里是由于使用了Time.deltaTime只等待了一段AnimationClip的播放，没有等待蹲下到站立的部分。这段的解决比较宽泛，可以用yield return 再等待一段时间。</p>\n<p>第4点，这个是因为Match Target的匹配时间点没设好，只能慢慢调了。</p>\n","text":"1，人物控制和相机控制1：控制相机与角色的偏移transform.position = new Vector3(x,x,x)+ followTarget.position; 2：让相机以角色为中心点，以一个圆为周期转动。 transform.position = Quaterni...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"Unity","slug":"Unity","count":3,"path":"api/categories/Unity.json"}],"tags":[{"name":"C#","slug":"C","count":3,"path":"api/tags/C.json"},{"name":"制作实例","slug":"制作实例","count":1,"path":"api/tags/制作实例.json"},{"name":"动画系统","slug":"动画系统","count":1,"path":"api/tags/动画系统.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#1%EF%BC%8C%E4%BA%BA%E7%89%A9%E6%8E%A7%E5%88%B6%E5%92%8C%E7%9B%B8%E6%9C%BA%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">1，人物控制和相机控制</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1%EF%BC%9A%E6%8E%A7%E5%88%B6%E7%9B%B8%E6%9C%BA%E4%B8%8E%E8%A7%92%E8%89%B2%E7%9A%84%E5%81%8F%E7%A7%BB\"><span class=\"toc-text\">1：控制相机与角色的偏移</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2%EF%BC%9A%E8%AE%A9%E7%9B%B8%E6%9C%BA%E4%BB%A5%E8%A7%92%E8%89%B2%E4%B8%BA%E4%B8%AD%E5%BF%83%E7%82%B9%EF%BC%8C%E4%BB%A5%E4%B8%80%E4%B8%AA%E5%9C%86%E4%B8%BA%E5%91%A8%E6%9C%9F%E8%BD%AC%E5%8A%A8%E3%80%82\"><span class=\"toc-text\">2：让相机以角色为中心点，以一个圆为周期转动。</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3%EF%BC%9A%E7%A7%BB%E5%8A%A8%E5%92%8C%E6%A0%B9%E6%8D%AE%E7%9B%B8%E6%9C%BA%E4%BD%8D%E7%BD%AE%E8%B0%83%E6%95%B4%E6%96%B9%E4%BD%8D\"><span class=\"toc-text\">3：移动和根据相机位置调整方位</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4%EF%BC%9A%E8%BD%AC%E7%94%A8CharacterController%E6%9D%A5%E6%8E%A7%E5%88%B6%E8%A7%92%E8%89%B2%E7%A7%BB%E5%8A%A8\"><span class=\"toc-text\">4：转用CharacterController来控制角色移动</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5%EF%BC%9A%E4%BD%BF%E7%94%A8Physics%E7%89%A9%E7%90%86%E6%A3%80%E6%B5%8B\"><span class=\"toc-text\">5：使用Physics物理检测</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#2-%E8%B7%91%E9%85%B7%E7%B3%BB%E7%BB%9F\"><span class=\"toc-text\">2.跑酷系统</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#1-%E5%A2%99%E9%9D%A2%E6%89%AB%E6%8F%8F\"><span class=\"toc-text\">1.墙面扫描</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#2-%E6%92%AD%E6%94%BE%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">2.播放动画</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#3-%E4%BC%98%E5%8C%96%E5%8A%A8%E7%94%BB\"><span class=\"toc-text\">3.优化动画</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Target-Matching-%E7%9B%AE%E6%A0%87%E5%8C%B9%E9%85%8D\"><span class=\"toc-text\">Target Matching 目标匹配</span></a></li></ol></li></ol></li></ol>","author":{"name":"HalfReunion","slug":"blog-author","avatar":"/img/icon/avatar.jpg","link":"/","description":"如无必要，勿增实体","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"ET框架学习_ETBook阅览","uid":"6724ada40863aa20046f27eaed957b7c","slug":"ET框架学习-ETBook阅览","date":"2022-06-28T05:35:40.000Z","updated":"2022-06-28T08:35:08.698Z","comments":true,"path":"api/articles/ET框架学习-ETBook阅览.json","keywords":null,"cover":"/img/background/cover.jpg","text":"加了ET群很久，一直只是看群里的人聊天谈地，clone了ET框架很长时间，也没有怎么看过，所以这次想先从ETBook开始看起，认识一下这个框架。 ETBook地址:http://etgame.cn/pages/a2f161/ 在这次的ETBook阅读的同时，我也会同步看烟雨迷离半...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"通用","slug":"通用","count":1,"path":"api/categories/通用.json"}],"tags":[{"name":"ET框架","slug":"ET框架","count":1,"path":"api/tags/ET框架.json"},{"name":"探索发现","slug":"探索发现","count":2,"path":"api/tags/探索发现.json"},{"name":"C#","slug":"C","count":3,"path":"api/tags/C.json"}],"author":{"name":"HalfReunion","slug":"blog-author","avatar":"/img/icon/avatar.jpg","link":"/","description":"如无必要，勿增实体","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{}}