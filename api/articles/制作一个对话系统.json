{"title":"制作一个对话系统","uid":"32ade29d9f77bbbe78f4c6f5a744afc3","slug":"制作一个对话系统","date":"2022-07-14T08:30:57.000Z","updated":"2022-07-18T03:57:33.186Z","comments":true,"path":"api/articles/制作一个对话系统.json","keywords":null,"cover":"/img/background/cover.jpg","content":"<p>做个制作对话系统，初衷是练习一下编辑器扩展的使用，应该会做一个节点编辑器去配置对话，使用ScriptObject来存储对话信息。</p>\n<hr>\n<p>第一个步骤是构建Node节点的信息，绘制Node节点，绘制贝塞尔曲线连接线。</p>\n<p>Node节点信息先简单的构建一批，以后看情况要加的时候再说。</p>\n<p>信息大概为唯一ID,对话文本,子节点ID</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Serializable</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DialogueNode</span> \n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> UniqueID<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> DialogueText<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\"><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> ChildrenId<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//Node节点的大小</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Rect</span> NodeRect <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Rect</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>打算使用ScriptObject来存储，包含1个角色的对话，</p>\n<p>首先构建成员变量，</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">CreateAssetMenu</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span>fileName <span class=\"token operator\">=</span><span class=\"token string\">\"Dialogue\"</span><span class=\"token punctuation\">,</span>menuName <span class=\"token operator\">=</span> <span class=\"token string\">\"System/Dialogue\"</span><span class=\"token punctuation\">,</span>order <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Dialogue</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ScriptableObject</span></span>\n<span class=\"token punctuation\">&#123;</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">SerializeField</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">List<span class=\"token punctuation\">&lt;</span>DialogueNode<span class=\"token punctuation\">></span></span> dialogueNodes <span class=\"token punctuation\">;</span>      <span class=\"token comment\">//拥有的对话节点</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">List<span class=\"token punctuation\">&lt;</span>DialogueNode<span class=\"token punctuation\">></span></span> DialogueNodes <span class=\"token operator\">=></span> dialogueNodes<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">DialogueNode</span> GetRootNode <span class=\"token operator\">=></span> dialogueNodes<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//获得根节点</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span>DialogueNode<span class=\"token punctuation\">></span></span> nodeLoopUp <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">Dictionary<span class=\"token punctuation\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">,</span> DialogueNode<span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">//以id为key存储所有节点，便于查询</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>为了取节点方便，在节点有变化的时候更新nodeLoopUp。</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnValidate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        nodeLoopUp<span class=\"token punctuation\">.</span><span class=\"token function\">Clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> DialogueNodes<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">DialogueNode</span> node <span class=\"token operator\">=</span> DialogueNodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            nodeLoopUp<span class=\"token punctuation\">[</span>node<span class=\"token punctuation\">.</span>UniqueID<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>再写一个便于获取所有子节点的方法。</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IEnumerable<span class=\"token punctuation\">&lt;</span>DialogueNode<span class=\"token punctuation\">></span></span> <span class=\"token function\">GetAllChildren</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DialogueNode</span> node<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span> \n        <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> childID <span class=\"token keyword\">in</span> node<span class=\"token punctuation\">.</span>childrenId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>nodeLoopUp<span class=\"token punctuation\">.</span><span class=\"token function\">ContainsKey</span><span class=\"token punctuation\">(</span>childID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">&#123;</span>   \n                <span class=\"token keyword\">yield</span> <span class=\"token keyword\">return</span> nodeLoopUp<span class=\"token punctuation\">[</span>childID<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>基础的数据构建先这样，之后编写节点编辑窗。</p>\n<p>创建节点编辑的窗口，</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DialogueEditor</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">EditorWindow</span></span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//目前点选的Dialogue</span>\n    <span class=\"token class-name\">Dialogue</span> selectedDialogue <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token class-name\">GUIStyle</span> nodeStyle<span class=\"token punctuation\">;</span>\n\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">MenuItem</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"Window/Dialogue Editor\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ShowEditorWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">GetWindow</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span><span class=\"token punctuation\">(</span><span class=\"token type-expression class-name\">DialogueEditor</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Dialogue Editor\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> \n\n    <span class=\"token comment\">//窗口打开后</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnEnable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//添加点选监听,设想是在Project窗口点击Dialogue的asset产生效果</span>\n        Selection<span class=\"token punctuation\">.</span>selectionChanged <span class=\"token operator\">+=</span> OnSelectionChange<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//构建单个Node的节点UI样式</span>\n        nodeStyle <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">GUIStyle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        nodeStyle<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">.</span>background <span class=\"token operator\">=</span> EditorGUIUtility<span class=\"token punctuation\">.</span><span class=\"token function\">Load</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"node0\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token class-name\">Texture2D</span><span class=\"token punctuation\">;</span>\n        nodeStyle<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">.</span>textColor <span class=\"token operator\">=</span> Color<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">//边缘到内容起始处的空间。</span>\n        nodeStyle<span class=\"token punctuation\">.</span>padding <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">RectOffset</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        nodeStyle<span class=\"token punctuation\">.</span>border <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">RectOffset</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//监听</span>\n    <span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnSelectionChange</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Dialogue</span> newDialogue <span class=\"token operator\">=</span> Selection<span class=\"token punctuation\">.</span>activeObject <span class=\"token keyword\">as</span> <span class=\"token class-name\">Dialogue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newDialogue <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">//锁定</span>\n            selectedDialogue <span class=\"token operator\">=</span> newDialogue<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">//刷新</span>\n            <span class=\"token function\">Repaint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>接着对点选的asset做效果的展示，想要做到的是类似AnimatorController那样的节点效果，不过节点的信息量会多一点。</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//类似update</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">OnGUI</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//先判定未点选的效果</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>selectedDialogue <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        EditorGUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">LabelField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"没有选择对话信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    \n    <span class=\"token comment\">//遍历Dialogue里的所有节点，然后绘制出来</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> selectedDialogue<span class=\"token punctuation\">.</span>DialogueNodes<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">DialogueNode</span> node <span class=\"token operator\">=</span> selectedDialogue<span class=\"token punctuation\">.</span>DialogueNodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">DrawNode</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token punctuation\">&#125;</span>\n\n\n<span class=\"token comment\">//绘制节点</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">DrawNode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DialogueNode</span> node<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//根据Node节点里的Rect类型成员变量来动态变动大小</span>\n    GUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">BeginArea</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>NodeRect<span class=\"token punctuation\">,</span> nodeStyle<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//记载UI信息变动</span>\n    EditorGUI<span class=\"token punctuation\">.</span><span class=\"token function\">BeginChangeCheck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    EditorGUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">LabelField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"节点\"</span><span class=\"token punctuation\">,</span> EditorStyles<span class=\"token punctuation\">.</span>whiteLabel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    EditorGUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">LabelField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"唯一ID:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">int</span></span> newUniqueID <span class=\"token operator\">=</span> EditorGUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">IntField</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>UniqueID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    EditorGUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">LabelField</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"对话信息:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">string</span></span> newText <span class=\"token operator\">=</span> EditorGUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">TextField</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>DialogueText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">//若有变动  </span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>EditorGUI<span class=\"token punctuation\">.</span><span class=\"token function\">EndChangeCheck</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//记录回退信息</span>\n        Undo<span class=\"token punctuation\">.</span><span class=\"token function\">RecordObject</span><span class=\"token punctuation\">(</span>selectedDialogue<span class=\"token punctuation\">,</span> <span class=\"token string\">\"更新节点信息\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//更新</span>\n        node<span class=\"token punctuation\">.</span>DialogueText <span class=\"token operator\">=</span> newText<span class=\"token punctuation\">;</span>\n        node<span class=\"token punctuation\">.</span>UniqueID <span class=\"token operator\">=</span> newUniqueID<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">//展示子节点的信息文本</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">DialogueNode</span> childNode <span class=\"token keyword\">in</span> selectedDialogue<span class=\"token punctuation\">.</span><span class=\"token function\">GetAllChildren</span><span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        EditorGUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">LabelField</span><span class=\"token punctuation\">(</span>childNode<span class=\"token punctuation\">.</span>DialogueText<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    GUILayout<span class=\"token punctuation\">.</span><span class=\"token function\">EndArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>-截图占位</p>\n<p>自适应问题还有待修改，等之后再优化一下。</p>\n<p>之后制作点击拖动的效果，思路是判定鼠标是否点击了Node框体，然后记录鼠标的拖拽位置，移动Node的rect.position。</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">\n<span class=\"token comment\">//拖动中的节点，作为成员变量保存</span>\n<span class=\"token keyword\">private</span>  <span class=\"token class-name\">DialogueNode</span> nodeInDragging <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">private</span> <span class=\"token return-type class-name\"><span class=\"token keyword\">void</span></span> <span class=\"token function\">ProcessEvents</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>Event<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">case</span> EventType<span class=\"token punctuation\">.</span>MouseDown<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> EventType<span class=\"token punctuation\">.</span>MouseDrag<span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> EventType<span class=\"token punctuation\">.</span>MouseUp<span class=\"token punctuation\">:</span> \n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>判断鼠标点击事件，当鼠标点击时判定鼠标是否点击了Node框体。</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token keyword\">private</span> <span class=\"token return-type class-name\">DialogueNode</span> <span class=\"token function\">SelectNode</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Vector2</span> v<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">DialogueNode</span> temp <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//遍历所有Node</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">int</span></span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> selectedDialogue<span class=\"token punctuation\">.</span>DialogueNodes<span class=\"token punctuation\">.</span>Count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">DialogueNode</span> node <span class=\"token operator\">=</span> selectedDialogue<span class=\"token punctuation\">.</span>DialogueNodes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">//节点包含了点击位置，List顺序越后的层级越高，优先选择层级高的Node</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>node<span class=\"token punctuation\">.</span>NodeRect<span class=\"token punctuation\">.</span><span class=\"token function\">Contains</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#123;</span>\n            temp <span class=\"token operator\">=</span> node<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> temp<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p>Node的原点位置在左上角，直接将鼠标点击的位置赋值给Node的Rect会出现问题，所以还需要计算一个偏移量。</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\"><span class=\"token comment\">//修正偏移量</span>\n<span class=\"token class-name\">Vector2</span> offset <span class=\"token operator\">=</span> nodeInDragging<span class=\"token punctuation\">.</span>NodeRect<span class=\"token punctuation\">.</span>position <span class=\"token operator\">-</span> Event<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>mousePosition<span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n\n<p>在处理拖动事件时注意将偏移量补上去，</p>\n<pre class=\"line-numbers language-csharp\" data-language=\"csharp\"><code class=\"language-csharp\">nodeInDragging<span class=\"token punctuation\">.</span>NodeRect<span class=\"token punctuation\">.</span>position <span class=\"token operator\">=</span> Event<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">.</span>mousePosition <span class=\"token operator\">+</span> offset<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">//实时刷新</span>\nGUI<span class=\"token punctuation\">.</span>changed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n\n<p><strong>GUI.changed和BeginChangeCheck的区别：前者对于任何修改都会返回true，后者只检查限特定的一组控件</strong></p>\n<p>最后是鼠标抬起时的事件，我这里直接将nodeInDragging置为null。</p>\n<p>-截图占位</p>\n","text":"做个制作对话系统，初衷是练习一下编辑器扩展的使用，应该会做一个节点编辑器去配置对话，使用ScriptObject来存储对话信息。 第一个步骤是构建Node节点的信息，绘制Node节点，绘制贝塞尔曲线连接线。 Node节点信息先简单的构建一批，以后看情况要加的时候再说。 信息大概为...","link":"","photos":[],"count_time":{"symbolsCount":"5.2k","symbolsTime":"5 mins."},"categories":[{"name":"Unity","slug":"Unity","count":8,"path":"api/categories/Unity.json"}],"tags":[{"name":"C#","slug":"C","count":7,"path":"api/tags/C.json"},{"name":"制作实例","slug":"制作实例","count":2,"path":"api/tags/制作实例.json"},{"name":"Editor","slug":"Editor","count":1,"path":"api/tags/Editor.json"}],"toc":"","author":{"name":"HalfReunion","slug":"blog-author","avatar":"/img/icon/avatar.jpg","link":"/","description":"如无必要，勿增实体","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{},"next_post":{"title":"Unity的异步编程","uid":"6d90e9563a794d3204e8d9a75ad8b2a9","slug":"Unity的异步编程","date":"2022-07-12T16:36:41.000Z","updated":"2022-07-13T08:20:03.232Z","comments":true,"path":"api/articles/Unity的异步编程.json","keywords":null,"cover":"/img/background/cover.jpg","text":"这里只打算探索一下Unity的协程实现和C#的原生异步实现：async&#x2F;await还有将async&#x2F;await整合进Unity生命周期的第三方库UniTask。 1. Unity的协程Unity的协程依赖于IEnumertor类的迭代原理和Mono的生命周期，...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"Unity","slug":"Unity","count":8,"path":"api/categories/Unity.json"}],"tags":[{"name":"探索发现","slug":"探索发现","count":3,"path":"api/tags/探索发现.json"},{"name":"C#","slug":"C","count":7,"path":"api/tags/C.json"}],"author":{"name":"HalfReunion","slug":"blog-author","avatar":"/img/icon/avatar.jpg","link":"/","description":"如无必要，勿增实体","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}