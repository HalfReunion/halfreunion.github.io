{"name":"C#","slug":"C","count":6,"postlist":[{"title":"ET框架学习_ETBook阅览(慢慢更)","uid":"ce2b5aade03ea809a40872ba12728878","slug":"ET框架学习-ETBook阅览","date":"2022-06-30T04:24:40.000Z","updated":"2022-07-13T03:49:54.603Z","comments":true,"path":"api/articles/ET框架学习-ETBook阅览.json","keywords":null,"cover":"/img/background/cover.jpg","text":"加了ET群很久，一直只是看群里的人聊天谈地，clone了ET框架很长时间，也没有怎么看过，所以这次想先从ETBook开始看起，认识一下这个框架。 ETBook地址:http://etgame.cn/pages/a2f161/ 在这次的ETBook阅读的同时，我也会同步看烟雨迷离半...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"通用","slug":"通用","count":1,"path":"api/categories/通用.json"}],"tags":[{"name":"ET框架","slug":"ET框架","count":1,"path":"api/tags/ET框架.json"},{"name":"探索发现","slug":"探索发现","count":3,"path":"api/tags/探索发现.json"},{"name":"C#","slug":"C","count":6,"path":"api/tags/C.json"}],"author":{"name":"HalfReunion","slug":"blog-author","avatar":"/img/icon/avatar.jpg","link":"/","description":"如无必要，勿增实体","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Time函数和Update和FixedUpdate","uid":"df72ebc7475da7a2a818b4e6f4f94099","slug":"Time函数和Update和FixedUpdate","date":"2022-06-26T08:17:29.000Z","updated":"2022-06-27T10:54:51.642Z","comments":true,"path":"api/articles/Time函数和Update和FixedUpdate.json","keywords":null,"cover":"/img/background/cover.jpg","text":"Time.timeScale 不会影响Update和LateUpdate的执行速度。 FixedUpdate是根据Time.time来执行的，所以Time.timeScale会影响到FixedUpdate的执行。 FixedTimeStep中的设置是指Time.time的时间变化...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"Unity","slug":"Unity","count":7,"path":"api/categories/Unity.json"}],"tags":[{"name":"探索发现","slug":"探索发现","count":3,"path":"api/tags/探索发现.json"},{"name":"C#","slug":"C","count":6,"path":"api/tags/C.json"},{"name":"Api","slug":"Api","count":1,"path":"api/tags/Api.json"}],"author":{"name":"HalfReunion","slug":"blog-author","avatar":"/img/icon/avatar.jpg","link":"/","description":"如无必要，勿增实体","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":false},{"title":"UnityEngine.Object和System.Object","uid":"0eeec1440f5c3f42f857474d88fef113","slug":"UnityEngine-Object和System-Object","date":"2022-06-29T03:32:19.000Z","updated":"2022-06-29T03:35:50.893Z","comments":true,"path":"api/articles/UnityEngine-Object和System-Object.json","keywords":null,"cover":"/img/background/cover.jpg","text":"引子 string s = string.Empty; var go = new GameObject(\"goodBoy\"); DestroyImmediate(go); go = null; if (!go) s += \"A\"; if (go is null) s += \"B\"...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"Unity","slug":"Unity","count":7,"path":"api/categories/Unity.json"}],"tags":[{"name":"C#","slug":"C","count":6,"path":"api/tags/C.json"},{"name":"基础","slug":"基础","count":2,"path":"api/tags/基础.json"}],"author":{"name":"HalfReunion","slug":"blog-author","avatar":"/img/icon/avatar.jpg","link":"/","description":"如无必要，勿增实体","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"制作一个跑酷系统","uid":"0b6ba2c8e01bb1370597130d76cb280b","slug":"制作一个跑酷系统","date":"2022-06-26T11:44:10.000Z","updated":"2022-06-28T08:47:34.157Z","comments":true,"path":"api/articles/制作一个跑酷系统.json","keywords":null,"cover":"/img/background/cover.jpg","text":"1，人物控制和相机控制1：控制相机与角色的偏移transform.position = new Vector3(x,x,x)+ followTarget.position; 2：让相机以角色为中心点，以一个圆为周期转动。 transform.position = Quaterni...","link":"","photos":[],"count_time":{"symbolsCount":"8.4k","symbolsTime":"8 mins."},"categories":[{"name":"Unity","slug":"Unity","count":7,"path":"api/categories/Unity.json"}],"tags":[{"name":"C#","slug":"C","count":6,"path":"api/tags/C.json"},{"name":"制作实例","slug":"制作实例","count":1,"path":"api/tags/制作实例.json"},{"name":"动画系统","slug":"动画系统","count":1,"path":"api/tags/动画系统.json"}],"author":{"name":"HalfReunion","slug":"blog-author","avatar":"/img/icon/avatar.jpg","link":"/","description":"如无必要，勿增实体","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"Unity的异步编程","uid":"6d90e9563a794d3204e8d9a75ad8b2a9","slug":"Unity的异步编程","date":"2022-07-12T16:36:41.000Z","updated":"2022-07-13T08:20:03.232Z","comments":true,"path":"api/articles/Unity的异步编程.json","keywords":null,"cover":"/img/background/cover.jpg","text":"这里只打算探索一下Unity的协程实现和C#的原生异步实现：async&#x2F;await还有将async&#x2F;await整合进Unity生命周期的第三方库UniTask。 1. Unity的协程Unity的协程依赖于IEnumertor类的迭代原理和Mono的生命周期，...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"Unity","slug":"Unity","count":7,"path":"api/categories/Unity.json"}],"tags":[{"name":"探索发现","slug":"探索发现","count":3,"path":"api/tags/探索发现.json"},{"name":"C#","slug":"C","count":6,"path":"api/tags/C.json"}],"author":{"name":"HalfReunion","slug":"blog-author","avatar":"/img/icon/avatar.jpg","link":"/","description":"如无必要，勿增实体","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},{"title":"小技巧_u3d_C#","uid":"9f9e7828b8716ddb566b45d44fabc1de","slug":"小技巧_u3d_C#","date":"2022-06-28T09:02:08.000Z","updated":"2022-06-28T09:06:21.788Z","comments":true,"path":"api/articles/小技巧_u3d_C#.json","keywords":null,"cover":"/img/background/cover.jpg","text":"1，使用Physics.OverlapSphereNonAlloc，不会像Physics.OverlapSphere那样创建出Collider[]数组出来，它生成的是一个int值类型，这意味着就不会分配内存空间，不会产生GC，很多检测都有NonAlloc，有些情况可以考虑使用这些...","link":"","photos":[],"count_time":{"symbolsCount":898,"symbolsTime":"1 mins."},"categories":[{"name":"Unity","slug":"Unity","count":7,"path":"api/categories/Unity.json"}],"tags":[{"name":"C#","slug":"C","count":6,"path":"api/tags/C.json"}],"author":{"name":"HalfReunion","slug":"blog-author","avatar":"/img/icon/avatar.jpg","link":"/","description":"如无必要，勿增实体","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}]}